{"version":3,"sources":["app/map/geocode.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YASA;gBAGI,0BAAY,IAAU;oBAClB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gBACrB,CAAC;gBAED,kCAAO,GAAP,UAAQ,OAAe;oBACnB,MAAM,CAAC,IAAI,CAAC,IAAI;yBACX,GAAG,CAAC,2DAA2D,GAAG,kBAAkB,CAAC,OAAO,CAAC,CAAC;yBAC9F,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;yBACtB,GAAG,CAAC,UAAA,MAAM;wBACP,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,KAAK,IAAI,CAAC,CAAC,CAAC;4BAAC,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;wBAAC,CAAC;wBAC7E,IAAI,QAAQ,GAAG,IAAI,yBAAQ,EAAE,CAAC;wBAC9B,QAAQ,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC;wBACvD,QAAQ,CAAC,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC;wBAC5D,QAAQ,CAAC,SAAS,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC;wBAE7D,IAAI,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC;wBACnD,QAAQ,CAAC,UAAU,GAAG,IAAI,sBAAY,CACpC,EAAC,GAAG,EAAE,QAAQ,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,EAAE,QAAQ,CAAC,SAAS,CAAC,GAAG,EAAC,EAC1D,EAAC,GAAG,EAAE,QAAQ,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,EAAE,QAAQ,CAAC,SAAS,CAAC,GAAG,EAAC,CAAC,CAAC;wBAC9D,MAAM,CAAC,QAAQ,CAAC;oBACpB,CAAC,CAAC,CAAC;gBACX,CAAC;gBAzBL;oBAAC,iBAAU,EAAE;;oCAAA;gBA0Bb,uBAAC;YAAD,CAzBA,AAyBC,IAAA;YAzBD,+CAyBC,CAAA","file":"app/map/geocode.service.js","sourcesContent":["import {Http, Headers, Response} from '@angular/http';\r\nimport {Location} from './location.class';\r\nimport {Injectable} from '@angular/core';\r\nimport {LatLngBounds} from 'leaflet';\r\n\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/mergeMap';\r\n\r\n@Injectable()\r\nexport class GeocodingService {\r\n    private http: Http;\r\n\r\n    constructor(http: Http) {\r\n        this.http = http;\r\n    }\r\n\r\n    geocode(address: string) {\r\n        return this.http\r\n            .get('http://maps.googleapis.com/maps/api/geocode/json?address=' + encodeURIComponent(address))\r\n            .map(res => res.json())\r\n            .map(result => {\r\n                if (result.status !== 'OK') { throw new Error('unable to geocode address'); }\r\n                var location = new Location();\r\n                location.address = result.results[0].formatted_address;\r\n                location.latitude = result.results[0].geometry.location.lat;\r\n                location.longitude = result.results[0].geometry.location.lng;\r\n\r\n                var viewPort = result.results[0].geometry.viewport;\r\n                location.viewBounds = new LatLngBounds(\r\n                  {lat: viewPort.southwest.lat, lng: viewPort.southwest.lng},\r\n                  {lat: viewPort.northeast.lat, lng: viewPort.northeast.lng});\r\n                return location;\r\n            });\r\n    }\r\n}"],"sourceRoot":"/source/"}