{"version":3,"sources":["app/map/map.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAaA;gBAeI,sBAAoB,KAAgB,EAAE,UAAsB,EAAG,QAA0B;oBAArE,UAAK,GAAL,KAAK,CAAW;oBAd1B,cAAS,GAAG,IAAI,mBAAY,EAAE,CAAC;oBAGlC,gBAAW,GAAY,IAAI,CAAC;oBASnC,cAAS,GAAG,KAAK,CAAC,CAAC,yBAAyB;oBAGxC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;oBAC7B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;gBAC7B,CAAC;gBAED,+BAAQ,GAAR;oBAAA,iBAWC;oBAVG,iBAAiB;oBAClB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;oBAC1E,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAE9B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,SAAS;oBAC3D,kCAAkC;oBAClC,UAAA,SAAS,IAAI,OAAA,KAAI,CAAC,GAAG,CAAC,SAAS,CAAC,SAAS,CAAC,EAA7B,CAA6B,CAC5C,CAAC;gBAGL,CAAC;gBA9BD;oBAAC,aAAM,EAAE;;+DAAA;gBARb;oBAAC,gBAAS,CAAC;wBACP,QAAQ,EAAE,SAAS;wBACnB,WAAW,EAAE,8BAA8B;wBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;wBAC1C,UAAU,EAAE,CAAC,wCAAkB,CAAC;wBAChC,SAAS,EAAE,CAAC,wBAAU,EAAE,kCAAgB,CAAC;qBAC5C,CAAC;;gCAAA;gBAiCF,mBAAC;YAAD,CAhCA,AAgCC,IAAA;YAhCD,uCAgCC,CAAA","file":"app/map/map.component.js","sourcesContent":["import {Component, ElementRef, OnInit, Output, EventEmitter} from '@angular/core';\r\nimport {MapService} from './map.service';\r\nimport {GeocodingService} from './geocode.service';\r\nimport {GeosearchComponent} from './geosearch.component';\r\nimport {Subscription} from 'rxjs/Subscription';\r\n\r\n@Component({\r\n    selector: 'fev-map',\r\n    templateUrl: './app/map/map.component.html',\r\n    styleUrls: ['./app/map/map.component.css'],\r\n    directives: [GeosearchComponent],\r\n    providers: [MapService, GeocodingService]\r\n})\r\nexport class MapComponent {\r\n    @Output() mapLoaded = new EventEmitter();\r\n    private mapService: MapService;\r\n    private geocoder: GeocodingService;\r\n    public touchScreen: Boolean = true;\r\n    map: any;\r\n    options: Object;\r\n\r\n    bounds: any;\r\n    subscription: Subscription;\r\n\r\n    error: any;\r\n    sub: any;\r\n    navigated = false; // true if navigated here\r\n\r\n    constructor(private elRef:ElementRef, mapService: MapService,  geocoder: GeocodingService) {\r\n        this.mapService = mapService;\r\n        this.geocoder = geocoder;\r\n    }\r\n\r\n    ngOnInit() {\r\n        // create the map\r\n       this.map = this.mapService.createMap(this.elRef.nativeElement.firstChild);\r\n       this.mapLoaded.next(this.map);\r\n\r\n       this.subscription = this.mapService.geosearchBounds$.subscribe(\r\n          //do the fitbounds operation here \r\n          newBounds => this.map.fitBounds(newBounds)\r\n       );\r\n\r\n\r\n    }\r\n}"],"sourceRoot":"/source/"}