{"version":3,"sources":["app/map/map.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;YAMA;gBAQI;oBAJA,0BAA0B;oBAClB,2BAAsB,GAAG,IAAI,6BAAa,EAAO,CAAC;oBAC1D,qBAAgB,GAAG,IAAI,CAAC,sBAAsB,CAAC,YAAY,EAAE,CAAC;oBAG1D,IAAI,CAAC,QAAQ,GAAG;wBACZ,aAAa,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,sDAAsD,EAAE;4BACnF,WAAW,EAAE,0LAA0L;yBAC1M,CAAC;wBACF,IAAI,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,+FAA+F,EAAE;4BACtH,WAAW,EAAE,4MAA4M;yBACzN,CAAC;qBACL,CAAC;gBACN,CAAC;gBAED,qCAAqC;gBACrC,8BAAS,GAAT,UAAU,KAAU;oBAChB,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;oBACjD,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,EAAE;wBAC1B,WAAW,EAAE,KAAK;wBAClB,MAAM,EAAE,IAAI,CAAC,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC;wBAC3C,gDAAgD;wBAChD,IAAI,EAAE,EAAE;wBACR,OAAO,EAAE,CAAC;wBACV,OAAO,EAAE,EAAE;wBACX,MAAM,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC;qBACtC,CAAC,CAAC;oBACH,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,UAAU,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBACzD,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAChD,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;gBACpB,CAAC;;gBAED,0BAA0B;gBAC1B,iKAAiK;gBACjK,IAAI;gBAEJ,kBAAkB;gBAClB,iCAAY,GAAZ,UAAa,SAAc;oBACvB,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBAChD,CAAC;gBAED,sCAAiB,GAAjB,UAAkB,GAAW;oBACzB,IAAI,IAAI,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBAE9B,CAAC,CAAC,QAAQ,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC;oBACzC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;gBAClE,CAAC;;gBAnDL;oBAAC,iBAAU,EAAE;;8BAAA;gBAoDb,iBAAC;YAAD,CAnDA,AAmDC,IAAA;YAnDD,mCAmDC,CAAA","file":"app/map/map.service.js","sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {Map, TileLayer} from 'leaflet';\r\n\r\nimport {ReplaySubject} from 'rxjs/ReplaySubject';\r\n\r\n@Injectable()\r\nexport class MapService {\r\n    public map: Map;\r\n    public baseMaps: any;\r\n\r\n    //Observable bounds source\r\n    private _geosearchBoundsSource = new ReplaySubject<any>();\r\n    geosearchBounds$ = this._geosearchBoundsSource.asObservable();\r\n\r\n    constructor() {\r\n        this.baseMaps = {\r\n            OpenStreetMap: new L.TileLayer(\"http://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\", {\r\n                attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>, Tiles courtesy of <a href=\"http://hot.openstreetmap.org/\" target=\"_blank\">Humanitarian OpenStreetMap Team</a>'\r\n            }),\r\n            Esri: new L.TileLayer('http://server.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x}', {\r\n            \tattribution: 'Tiles &copy; Esri &mdash; Esri, DeLorme, NAVTEQ, TomTom, Intermap, iPC, USGS, FAO, NPS, NRCAN, GeoBase, Kadaster NL, Ordnance Survey, Esri Japan, METI, Esri China (Hong Kong), and the GIS User Community'\r\n            })\r\n        };\r\n    }\r\n\r\n    // load a web map and return response\r\n    createMap(domId: any) {\r\n        console.log('in map service createMap function');\r\n        this.map = new L.Map(domId, {\r\n          zoomControl: false,\r\n          center: new L.LatLng(40.731253, -73.996139),\r\n          //zoom: this.getURLParameter('zoomLevel') || 12,\r\n          zoom: 12,\r\n          minZoom: 4,\r\n          maxZoom: 19,\r\n          layers: [this.baseMaps.OpenStreetMap]\r\n        });\r\n        L.control.zoom({ position: 'topright' }).addTo(this.map);\r\n        L.control.layers(this.baseMaps).addTo(this.map);\r\n        return this.map;\r\n    };\r\n\r\n    // getURLParameter(name) {\r\n    //     return decodeURIComponent((new RegExp('[?|&]' + name + '=' + '([^&;]+?)(&|#|;|$)').exec(location.search) || [null, ''])[1].replace(/\\+/g, '%20')) || null;\r\n    // }\r\n\r\n    // service command\r\n    changeBounds(newBounds: any) {\r\n        this._geosearchBoundsSource.next(newBounds);\r\n    }\r\n\r\n    disableMouseEvent(tag: string) {\r\n        var html = L.DomUtil.get(tag);\r\n\r\n        L.DomEvent.disableClickPropagation(html);\r\n        L.DomEvent.on(html, 'mousewheel', L.DomEvent.stopPropagation);\r\n    };\r\n}"],"sourceRoot":"/source/"}